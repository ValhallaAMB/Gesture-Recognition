# for gestures in results.gestures:
    #     for gesture in gestures:
    #         if gesture.score > 0.99:
    #             if len(text) > 0:
    #                 if not text.endswith(gesture.category_name):
    #                     text += gesture.category_name
    #             else:
    #                 text += gesture.category_name
    #         # print(gesture.category_name, gesture.score)

    # if not results.gestures and len(text) > 0 and not text.endswith(" "):
    #     sentence.append(spell.correction(text))
    #     text = ""
    #     sentence.append(" ")

    # if len(text) > 25:
    #     text = text[-25:]

---------------------------

# for gestures in results.gestures:
    #     for gesture in gestures:
    #         if gesture.score > 0.99:
    #             if len(sentence) > 0:
    #                 if sentence[-1] != gesture.category_name:
    #                     sentence.append(gesture.category_name)
    #             else:
    #                 sentence.append(gesture.category_name)
    #         print(gesture.category_name, gesture.score)

    # if not results.gestures and len(sentence) > 0 and sentence[-1] != " ":
    #     sentence.append(" ")

    # if len(sentence) > 25:
    #     sentence = sentence[-25:]

-----------------------------

 # Spelling and sentence correction
    # if not results.gestures and len(text) > 0 and not text.endswith(" "):
    #     text = text.lower()
    #     blob += spell.correction(text)
    #     blob += " "
    #     text = ""

-----------------------------

# text,
        # blob.string,
        # "".join(sentence),
        # "".join(sentence) + text if len(text) > 0 else "".join(sentence),

--------------------------------

TO DETECT DUPLICATE LETTERS USING COORDINATES (ABSOLUTE BULLSHIT THO)
# hand_position = None

    # # Check if hand landmarks are detected
    # if hasattr(results, "hand_landmarks") and results.hand_landmarks:
    #     print("Hand landmarks detected:", results.hand_landmarks)  # Debugging

    # # if results.hand_landmarks:
    # for hand_landmarks_proto in results.hand_landmarks:
    #     if hasattr(hand_landmarks_proto, "landmark"):
    #         x_coords = [lm.x for lm in hand_landmarks_proto.landmark]
    #         y_coords = [lm.y for lm in hand_landmarks_proto.landmark]
            
    #         frame_height, frame_width, _ = image.shape
    #         center_x = int(np.mean(x_coords) * frame_width)
    #         center_y = int(np.mean(y_coords) * frame_height)

    #         hand_position = (center_x, center_y)

    #         #if the hand is moved significantly, reset the gesture detection
    #         if last_hand_position is not None:
    #             movement_threshold = 50
    #             if(
    #                 abs(center_x - last_hand_position[0]) > movement_threshold
    #                 or abs(center_y - last_hand_position[1]) > movement_threshold
    #             ):
    #                 gesture_detected = True
    #                 last_gesture_time = current_time

    #         last_hand_position = hand_position
    #     # else:
    #     #      print("No landmark attribute found for hand_landmarks_proto")  # Debugging

--------------------------

# # If 2 seconds pass and no gesture is being detected, add a space to spearate words
    # if not gesture_detected and current_time - last_gesture_time > 2:
    #     if text:
    #         corrected_word = spell.correction(text).lower()
    #         blob += corrected_word + " "
    #         text = ""
    #     last_gesture_time = current_time     
    
    #Sentence spelling and correction
    # if len(blob) > 100:
    #     blob = blob[-100:]
    #     blob.correct()
    # elif blob.string.count(" ") >= 2:
    #     blob.correct()
    # elif blob.string.count(" ") >= 1 and current_time - last_gesture_time> 2: # this is for singlular letters such as "I" and "a" in sentences, increase this if you are slow in fingerspelling
    #     blob.correct()
    
    # if current_time - last_gesture_time >= 5:
    #     blob = tb("")
    #     text = ""

